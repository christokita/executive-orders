text_tokens(c("love", "loved"), stemmer = "en")
text_tokens(test, stemmer = "en")
hunspell::hunspell_stem("science")
hunspell::hunspell_stem("sciences")
hunspell::hunspell_stem("scienctific")
hunspell::hunspell_stem("environmental")
?CreateDtm
stopwords::stopwords(source = "en")
stopwords::stopwords(source = "smart")
source("scripts/util/__Util_MASTER.R")
####################
# Load data
####################
files <_ list.files("data_derived/lda_models/", full.names = T)
####################
# Load data
####################
files <- list.files("data_derived/lda_models/", full.names = T)
x = files[1]
# Load
load(x)
names(eo_lda)
eo_lda$coherence
# Get coherence data
to_return(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence)
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence)
View(to_return)
source("scripts/util/__Util_MASTER.R")
####################
# Analyze coherence by topic number
####################
# Get files
files <- list.files("data_derived/lda_models/", full.names = T)
# load each and get coherence
coherence <- lapply(files, function(x) {
# Load
load(x)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence)
# Return
return(to_return)
})
# load each and get coherence
coherence <- lapply(files, function(x) {
# Load
print(x)
load(x)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence)
# Return
return(to_return)
})
coherence <- do.call('rbind', coherence)
View(coherence)
plot(coherence)
rm(to_return)
# Prep and plot
cohere_data <- coherence %>%
group_by(topc_num) %>%
mutate(mean_cohere = mean(coherence))
# Prep and plot
cohere_data <- coherence %>%
group_by(topic_num) %>%
mutate(mean_cohere = mean(coherence))
View(cohere_data)
# Prep and plot
cohere_data <- coherence %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence))
source("scripts/util/__Util_MASTER.R")
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence))
####################
# Source other function scripts
####################
source("scripts/util/__Util_GraphingFunctions.R")
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence), size = 0.1, color = "grey20") +
geom_line(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence), size = 0.1, color = "grey20") +
geom_line(data = cohere_data, aes(x = topic_num, y = med_cohere)) +
geom_point(data = cohere_data, aes(x = topic_num, y = med_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = coherence, aes(x = topic_num, y = coherence), size = 0.1, color = "grey20") +
geom_line(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
# Prep and plot
cohere_data <- coherence %>%
mutate(coherence = log10(coherence))
cohere_sum <- coherence_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
cohere_sum <- cohere_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
gg_cohere <- ggplot() +
geom_point(data = coherence, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_data, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
# Prep and plot
cohere_data <- coherence %>%
mutate(coherence = log(coherence))
cohere_sum <- cohere_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
gg_cohere <- ggplot() +
geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
# Prep and plot
cohere_data <- coherence
cohere_sum <- cohere_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
gg_cohere <- ggplot() +
geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
theme_ctokita()
gg_cohere
load('data_derived/dtms/eo_dtm.Rdata')
# Remove overly frequent words
tf <- TermDocFreq(dtm = eo_dtm)
keep_terms <- tf$term[ tf$doc_freq <= nrow(eo_dtm)/2]
rnow(tf) - nrow(keep_terms)
length(keep_terms)
rnow(tf) - length(keep_terms)
nrow(tf) - length(keep_terms)
eo_dtm
colSums(eo_dtm) / sum(eo_dtm)
colSums(eo_dtm) / sum(eo_dtm) * 100
50/50
50/10
50/10
plot(eo_lda$log_likelihood, type = "l")
gg_cohere
rm(list = ls())
# Load bet fit model
load("data_derived/lda_models/eo_lda_k60.Rdata")
plot(eo_lda$log_likelihood, type = "l")
# Get top terms and label topics
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 5,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.05,
dtm = eo_dtm,
M = 3)
# Load bet fit model
load("data_derived/dtms/eo_dtm.Rdata")
load("data_derived/lda_models/eo_lda_k60.Rdata")
plot(eo_lda$log_likelihood, type = "l")
# Get top terms and label topics
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.05,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
test <- eo_lda$summary
View(test)
rm(list = ls())
# Load bet fit model
load("data_derived/dtms/eo_dtm.Rdata")
load("data_derived/lda_models/eo_lda_k60.Rdata")
plot(eo_lda$log_likelihood, type = "l")
# Get top terms and label topics
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.05,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
test <- eo_lda$summary
View(test)
eo_lda$top_terms
grepl("scien", eo_lda$top_terms)
sum(grepl("scien", eo_lda$top_terms))
rm(list = ls())
# Load bet fit model
load("data_derived/dtms/eo_dtm.Rdata")
load("data_derived/lda_models/eo_lda_k85.Rdata")
plot(eo_lda$log_likelihood, type = "l")
# Get top terms and label topics
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.05,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
sum(grepl("scien", eo_lda$top_terms))
test <- eo_lda$summary
View(test)
sum(grepl("tech", eo_lda$top_terms))
sum(grepl("research", eo_lda$top_terms))
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.2,
dtm = eo_dtm,
M = 3)
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
test <- eo_lda$summary
View(test)
View(eo_lda)
View(test)
?LavelTopics
?LabelTopics
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.4,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
test <- eo_lda$summary
View(test)
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.1,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
test <- eo_lda$summary
View(test)
eo_lda$phi
eo_lda$log_likelihood
test <- eo_lda[, "log_likelihood"]
test <- eo_lda["log_likelihood"]
source("scripts/util/__Util_MASTER.R")
####################
# Analyze coherence by topic number
####################
# Get files
files <- list.files("data_derived/lda_models", full.names = T)
# load each and get coherence
coherence <- lapply(files, function(x) {
# Load
print(x)
load(x)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence)
# Return
return(to_return)
})
coherence <- do.call('rbind', coherence)
# Prep and plot
cohere_data <- coherence
cohere_sum <- cohere_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence))
gg_cohere <- ggplot() +
geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = cohere_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
geom_point(data = cohere_sum, aes(x = topic_num, y = med_cohere)) +
theme_ctokita()
gg_cohere
rm(list = ls())
# Load bet fit model
load("data_derived/dtms/eo_dtm.Rdata")
load("data_derived/lda_models/eo_lda_k40.Rdata")
plot(eo_lda$log_likelihood, type = "l")
# Get top terms and label topics
eo_lda$top_terms <- GetTopTerms(phi = eo_lda$phi, M = 10)
eo_lda$labels <- LabelTopics(assignments = eo_lda$theta > 0.1,
dtm = eo_dtm,
M = 3)
# Summarise
eo_lda$prevalence <- colSums(eo_lda$theta) / sum(eo_lda$theta) * 100
eo_lda$summary <- data.frame(topic = rownames(eo_lda$phi),
label = eo_lda$labels,
coherence = round(eo_lda$coherence, 3),
prevalence = round(eo_lda$prevalence,3),
top_terms = apply(eo_lda$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
View(eo_lda$summary)
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence,
r2 = eo_lda$r2,
logLikelihood = eo_lda$log_likelihood[length(eo_lda$log_likelihood)])
eo_lda$r2
eo_lda$log_likelihood[length(eo_lda$log_likelihood)]
eo_lda$log_likelihood
dim(eo_lda$log_likelihood)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence,
r2 = eo_lda$r2,
logLikelihood = eo_lda$log_likelihood[length(eo_lda$log_likelihood), 2])
View(to_return)
rm(list = ls())
source("scripts/util/__Util_MASTER.R")
####################
# Analyze coherence by topic number
####################
# Get files
files <- list.files("data_derived/lda_models", full.names = T)
# load each and get coherence
coherence <- lapply(files, function(x) {
# Load
print(x)
load(x)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence,
r2 = eo_lda$r2,
logLikelihood = eo_lda$log_likelihood[length(eo_lda$log_likelihood), 2])
# Return
return(to_return)
})
coherence <- do.call('rbind', coherence)
model_data <- do.call('rbind', coherence)
# Prep and plot
model_sum <- model_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence),
r2 = mean(r2),
logLikelihood = mean(logLikelihood))
model_data <- do.call('rbind', coherence)
# Prep and plot
model_sum <- model_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence),
r2 = mean(r2),
logLikelihood = mean(logLikelihood))
View(model_data)
# load each and get coherence
coherence <- lapply(files, function(x) {
# Load
print(x)
load(x)
# Get coherence data
to_return <- data.frame(topic_num = length(eo_lda$coherence),
coherence = eo_lda$coherence,
r2 = eo_lda$r2,
logLikelihood = eo_lda$log_likelihood[length(eo_lda$log_likelihood), 2])
# Return
return(to_return)
})
model_data <- do.call('rbind', coherence)
# Prep and plot
model_sum <- model_data %>%
group_by(topic_num) %>%
summarise(mean_cohere = mean(coherence),
med_cohere = median(coherence),
r2 = mean(r2),
logLikelihood = mean(logLikelihood))
gg_cohere <- ggplot() +
# geom_point(data = model_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = model_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = model_sum, aes(x = topic_num, y = mean_cohere)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = model_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = model_sum, aes(x = topic_num, y = r2)) +
geom_point(data = model_sum, aes(x = topic_num, y = r2)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = model_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = model_sum, aes(x = topic_num, y = logLikelihood)) +
geom_point(data = model_sum, aes(x = topic_num, y = logLikelihood)) +
theme_ctokita()
gg_cohere
gg_cohere <- ggplot() +
# geom_point(data = model_data, aes(x = topic_num, y = coherence), size = 0.1, color = "grey80") +
geom_line(data = model_sum, aes(x = topic_num, y = mean_cohere)) +
geom_point(data = model_sum, aes(x = topic_num, y = r2)) +
theme_ctokita()
gg_cohere
?FitLdaModel
FitLdaModel
?CalcProbCoherence
rm(list = ls())
# Load bet fit model
load("data_derived/dtms/eo_dtm.Rdata")
load("data_derived/lda_models/eo_lda_k40.Rdata")
eo_lda$phi
dim(eo_lda$phi)
CalcProbCoherence(phi = eo_lda$phi, dtm = eo_dtm, M = 10)
CalcProbCoherence(phi = eo_lda$phi, dtm = eo_dtm, M = 5)
eo_lda$coherence
eo_lda$blah <- 10
eo_lda$blah
rm(list =ls())
source("scripts/util/__Util_MASTER.R")
library(parallel)
library(snowfall)
####################
# Load data
####################
load("/scratch/gpfs/ctokita/ExecutiveOrders/data/eosCurated.RData")
####################
# Prep data
####################
# make document-term matrix (DTM)
eo_dtm <- CreateDtm(doc_vec = eos$text,
doc_names = eos$num,
ngram_window = 1,
stopword_vec = c(stopwords::stopwords('en'), stopwords::stopwords(source = 'smart')),
lower = TRUE,
remove_punctuation = TRUE,
remove_numbers = TRUE,
verbose = FALSE,
# stem_lemma_function = function(x) SnowballC::wordStem(x, "porter"),
cpus = 2)
load('data/eosCurated.RData')
?CreateDtm
